{"version":3,"sources":["webpack:///./src/components/postlink.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/tagIndex.tsx"],"names":["PostLink","post","to","frontmatter","slug","title","date","pageQuery","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","style","fontSize","marginTop","TagIndex","group","useStaticQuery","tagsGroup","tagName","fieldValue"],"mappings":"iLAUeA,EAPE,SAAC,GAAD,IAAIC,EAAJ,EAAIA,KAAJ,OACf,6BACE,kBAAC,OAAD,CAAMC,GAAID,EAAKE,YAAYC,MACxBH,EAAKE,YAAYE,MADpB,KAC6BJ,EAAKE,YAAYG,KAD9C,O,YCoCSC,GALEC,UA/BG,SAAC,GAUb,IACEC,EADF,EATeC,KACEC,kBAAqBC,MAUvCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKZ,YAAYG,QACvCU,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIjB,KAAMa,EAAKC,UACvD,OACA,6BACE,8CACA,qCACA,6BAAMN,GACN,oCACA,kBAAC,IAAD,MACA,uCACA,kBAAC,OAAD,CAAMP,GAAI,sBAAV,QACA,6BACE,uBAAGiB,MAAO,CAACC,SAAU,QAASC,UAAW,SAAS,6BAAlD,iHAYmB,e,kCCzCzB,4BA4CeC,IAzCE,WACf,IAUQC,EAVoBC,yBAAe,cAUpBC,UAAfF,MACR,OACE,2BACE,0BACGA,EAAMP,KAAI,SAACD,GACV,IAAMW,EAAUX,EAAKY,WACrB,OACE,wBAAMV,IAAKS,GACT,gBAAC,OAAD,CAAMxB,GAAE,SAAWwB,GAAnB,IAAgCA,EAAhC","file":"component---src-pages-index-tsx-c232f7b7dfaa6ce8c693.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ( { post }: {post :PostData} ) => (\n  <div>\n    <Link to={post.frontmatter.slug}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\nexport default PostLink\n\nexport interface PostData {\n  id: string\n  excerpt: string\n  frontmatter: {\n    date: string\n    slug: string\n    title: string\n  }\n}\n\n","import React from \"react\"\nimport PostLink, {PostData} from \"../components/postlink\"\nimport { graphql, Link } from \"gatsby\"\nimport TagIndex from \"../components/tagIndex\"\n\nconst IndexPage = ({\n                     data: {\n                       allMarkdownRemark: { edges  },\n                     },\n                   }: {\n  data:\n    {\n      allMarkdownRemark:\n        { edges: PostsData }\n    }\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node}/>)\n  return(\n  <div>\n    <h1>DROBUNE Weblog</h1>\n    <h3>Posts</h3>\n    <div>{Posts}</div>\n    <h3>Tags</h3>\n    <TagIndex/>\n    <h3>Profile</h3>\n    <Link to={\"https://drobune.nl\"}>link</Link>\n    <div>\n      <p style={{fontSize: \"small\", marginTop: \"2rem\"}}><br/>\n      当ブログはamzon.co.jpを宣伝しリンクすることによってサイトが紹介料を獲得できる手段を提供することを目的に設定されたアフィリエイト宣伝プログラムである、 Amazonアソシエイト・プログラムの参加者です。\n      </p>\n    </div>\n  </div>)\n}\n\nexport default IndexPage\n\ntype PostsData = Array<{node: PostData }>\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            slug\n            title\n          }\n        }\n      }\n    }\n  }`\n\n","import * as React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nconst TagIndex = () => {\n  const data: PageQueryData = useStaticQuery(graphql`  \n  query getAllTags {\n    tagsGroup: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n  `)\n\n  const { group } = data.tagsGroup\n  return (\n    <div>\n      <ul>\n        {group.map((node ) => {\n          const tagName = node.fieldValue\n          return (\n            <span key={tagName}>\n              <Link to={`/tags/${tagName}`}>#{tagName}&nbsp;</Link>\n            </span>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  tagsGroup: {\n    group: [\n      { fieldValue: any }\n    ]\n  }\n}\n\nexport default TagIndex\n"],"sourceRoot":""}