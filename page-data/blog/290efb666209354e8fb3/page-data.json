{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/blog/290efb666209354e8fb3/","result":{"data":{"markdownRemark":{"html":"<h3>\n<span id=\"背景\" class=\"fragment\"></span><a href=\"#%E8%83%8C%E6%99%AF\"><i class=\"fa fa-link\"></i></a>背景</h3>\n<hr>\n<p>herokuアプリでサブドメインについてもssl通信を利用するため、<br><br>\nルートからワイルドカードに差し替えを行った。</p>\n<p>前のが結構残ってて、もったいないけど。。。</p>\n<h3>\n<span id=\"メモ\" class=\"fragment\"></span><a href=\"#%E3%83%A1%E3%83%A2\"><i class=\"fa fa-link\"></i></a>メモ</h3>\n<hr>\n<h4>\n<span id=\"1-証明書のコピー\" class=\"fragment\"></span><a href=\"#1-%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC\"><i class=\"fa fa-link\"></i></a>1. 証明書のコピー</h4>\n<p>まずは認証会社から送られてきたssl証明書をcrtファイルに保存する。<br><br>\n確認コマンドは次のとおり。</p>\n<ul>\n<li>期限の確認</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>openssl x509 -in site.crt -noout -dates\n</pre></div></div>\n<ul>\n<li>中身の確認</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>openssl x509 -text -noout -in site.crt\n</pre></div></div>\n<h4>\n<span id=\"2-rapidsslの場合\" class=\"fragment\"></span><a href=\"#2-rapidssl%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>2. (RapidSSLの場合)</h4>\n<p>RaidSSL自体のクロスルート仕様の中間証明書も必要。<br>\n次のコマンドで自分のサイト証明書と合体させる。</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>curl https://knowledge.rapidssl.com/library/VERISIGN/ALL_OTHER/RapidSSL%20Intermediate/RapidSSL_CA_bundle.pem &gt; rapidssl_bundle.pem\n<p>cat site.crt rapidssl_bundle.pem > server.key</p>\n</pre></div></div>\n<p>** server.key<br>\nssl通信をするための秘密鍵（rsa)</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>openssl rsa -in ssl_example_jp.key -check -noout\n</pre></div></div>\n<p>** site.csr : ssl通信の為の公開鍵　fqdn（httpsの後に続くドメイン名）がはいってる</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>openssl req -in site.csr -verify -noout\n</pre></div></div>\n<h4>\n<span id=\"3-サーバに設置する秘密鍵の準備\" class=\"fragment\"></span><a href=\"#3-%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AB%E8%A8%AD%E7%BD%AE%E3%81%99%E3%82%8B%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%AE%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>3. サーバに設置する秘密鍵の準備</h4>\n<p>証明書申請時に作成した秘密鍵のパスフレーズを解除する</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>openssl rsa -in site.key -out server.key\n</pre></div></div>\n<h4>\n<span id=\"4-herokuにpush\" class=\"fragment\"></span><a href=\"#4-heroku%E3%81%ABpush\"><i class=\"fa fa-link\"></i></a>4. herokuにpush</h4>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku certs:update server.crt server.key --app &lt;your app&gt;\n</pre></div></div>\n<h4>\n<span id=\"5-ssl通信の確認\" class=\"fragment\"></span><a href=\"#5-ssl%E9%80%9A%E4%BF%A1%E3%81%AE%E7%A2%BA%E8%AA%8D\"><i class=\"fa fa-link\"></i></a>5. ssl通信の確認</h4>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>curl -kvI https://hogehoge.xxxx.com \n</pre></div></div>\n<h4>\n<span id=\"おまけ\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\"><i class=\"fa fa-link\"></i></a>おまけ</h4>\n<hr>\n<ul>\n<li>鍵ファイル確認方法\n次のmodulasキーが同じであればペアが確認できる。</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ openssl rsa -in site.key -text -noout -modulus\n$ openssl req -in site.csr -text -noout -modulus\n$ openssl x509 -text -noout -in site.crt -modulus\n</pre></div></div>\n<ul>\n<li>現在のheroku設定状況</li>\n</ul>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku certs\n</pre></div></div>","frontmatter":{"date":"2014-05-07","slug":"/blog/290efb666209354e8fb3","title":"herokuのssl証明書を更新する","image":null,"tags":["Heroku","SSL"]}}},"pageContext":{"slug":"/blog/290efb666209354e8fb3"}},"staticQueryHashes":["1342192543"]}