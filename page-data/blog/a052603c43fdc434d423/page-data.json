{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/blog/a052603c43fdc434d423/","result":{"data":{"markdownRemark":{"html":"<p>tty経由でないと怒られるようになった（前はそんな事なかった気がする気がする）</p>\n<p>原因はAmazonのLinuxのデフォの/etc/sudoersに下の一行があるから。</p>\n<div class=\"code-frame\" data-lang=\"apache\"><div class=\"highlight\"><pre>Defaults    requiretty\n</pre></div></div>\n<p>これをコメントアウトするようにchef-soloのレシピを追加して回避した。</p>\n<p>もしかしたらwheel使うのが正しいのだろうか？？</p>\n<h2>\n<span id=\"手順\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E9%A0%86\"><i class=\"fa fa-link\"></i></a>手順</h2>\n<p>recipeに追加したコード</p>\n<div class=\"code-frame\" data-lang=\"rb\"><div class=\"highlight\"><pre><span class=\"n\">directory</span> <span class=\"s1\">'/etc/sudoers.d'</span> <span class=\"k\">do</span>\n    <span class=\"n\">mode</span>    <span class=\"s1\">'0755'</span>\n    <span class=\"n\">owner</span>   <span class=\"s1\">'root'</span>\n<span class=\"k\">end</span>\n<p><span class=\"n\">template</span> <span class=\"s2\">\"sudoers\"</span> <span class=\"k\">do</span>\n<span class=\"n\">source</span> <span class=\"s1\">'sudoers.erb'</span>\n<span class=\"n\">mode</span>   <span class=\"s1\">'0440'</span>\n<span class=\"n\">owner</span>  <span class=\"s1\">'root'</span>\n<span class=\"k\">end</span></p>\n</pre></div></div>\n<p>/template/sudoers.erbを追加</p>\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre><span class=\"c\">## Sudoers allows particular users to run various commands as</span>\n<span class=\"c\">## the root user, without needing the root password.</span>\n<span class=\"c\">##</span>\n<span class=\"c\">## Examples are provided at the bottom of the file for collections</span>\n<span class=\"c\">## of related commands, which can then be delegated out to particular</span>\n<span class=\"c\">## users or groups.</span>\n<span class=\"c\">## </span>\n<span class=\"c\">## This file must be edited with the 'visudo' command.</span>\n<p><span class=\"c\">## Host Aliases</span>\n<span class=\"c\">## Groups of machines. You may prefer to use hostnames (perhaps using </span>\n<span class=\"c\">## wildcards for entire domains) or IP addresses instead.</span>\n<span class=\"c\"># Host<em>Alias     FILESERVERS = fs1, fs2</span>\n<span class=\"c\"># Host</em>Alias     MAILSERVERS = smtp, smtp2</span></p>\n<p><span class=\"c\">## User Aliases</span>\n<span class=\"c\">## These aren't often necessary, as you can use regular groups</span>\n<span class=\"c\">## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname </span>\n<span class=\"c\">## rather than USERALIAS</span>\n<span class=\"c\"># User_Alias ADMINS = jsmith, mikem</span></p>\n<p><span class=\"c\">## Command Aliases</span>\n<span class=\"c\">## These are groups of related commands...</span></p>\n<p><span class=\"c\">## Networking</span>\n<span class=\"c\"># Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient, /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig, /sbin/mii-tool</span></p>\n<p><span class=\"c\">## Installation and management of software</span>\n<span class=\"c\"># Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum</span></p>\n<p><span class=\"c\">## Services</span>\n<span class=\"c\"># Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig</span></p>\n<p><span class=\"c\">## Updating the locate database</span>\n<span class=\"c\"># Cmnd_Alias LOCATE = /usr/bin/updatedb</span></p>\n<p><span class=\"c\">## Storage</span>\n<span class=\"c\"># Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount</span></p>\n<p><span class=\"c\">## Delegating permissions</span>\n<span class=\"c\"># Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp </span></p>\n<p><span class=\"c\">## Processes</span>\n<span class=\"c\"># Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall</span></p>\n<p><span class=\"c\">## Drivers</span>\n<span class=\"c\"># Cmnd_Alias DRIVERS = /sbin/modprobe</span></p>\n<p><span class=\"c\"># Defaults specification</span></p>\n<p><span class=\"c\">#</span>\n<span class=\"c\"># Disable \"ssh hostname sudo &#x3C;cmd>\", because it will show the password in clear. </span>\n<span class=\"c\">#         You have to run \"ssh -t hostname sudo &#x3C;cmd>\".</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Defaults    requiretty !!!!!!!!!HERE!!!!!!!!!</span></p>\n<p><span class=\"c\">#</span>\n<span class=\"c\"># Refuse to run if unable to disable echo on the tty. This setting should also be</span>\n<span class=\"c\"># changed in order to be able to use sudo without a tty. See requiretty above.</span>\n<span class=\"c\">#</span>\nDefaults   <span class=\"o\">!</span>visiblepw</p>\n<p><span class=\"c\">#</span>\n<span class=\"c\"># Preserving HOME has security implications since many programs</span>\n<span class=\"c\"># use it when searching for configuration files. Note that HOME</span>\n<span class=\"c\"># is already set when the the env<em>reset option is enabled, so</span>\n<span class=\"c\"># this option is only effective for configurations where either</span>\n<span class=\"c\"># env</em>reset is disabled or HOME is present in the env<em>keep list.</span>\n<span class=\"c\">#</span>\nDefaults    always</em>set_home</p>\n<p>Defaults    env<em>reset\nDefaults    env</em>keep <span class=\"o\">=</span>  <span class=\"s2\">\"COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS<em>COLORS\"</span>\nDefaults    env</em>keep +<span class=\"o\">=</span> <span class=\"s2\">\"MAIL PS1 PS2 QTDIR USERNAME LANG LC<em>ADDRESS LC</em>CTYPE\"</span>\nDefaults    env<em>keep +<span class=\"o\">=</span> <span class=\"s2\">\"LC</em>COLLATE LC<em>IDENTIFICATION LC</em>MEASUREMENT LC<em>MESSAGES\"</span>\nDefaults    env</em>keep +<span class=\"o\">=</span> <span class=\"s2\">\"LC<em>MONETARY LC</em>NAME LC<em>NUMERIC LC</em>PAPER LC<em>TELEPHONE\"</span>\nDefaults    env</em>keep +<span class=\"o\">=</span> <span class=\"s2\">\"LC<em>TIME LC</em>ALL LANGUAGE LINGUAS <em>XKB</em>CHARSET XAUTHORITY\"</span></p>\n<p><span class=\"c\">#</span>\n<span class=\"c\"># Adding HOME to env<em>keep may enable a user to run unrestricted</span>\n<span class=\"c\"># commands via sudo.</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Defaults   env</em>keep += \"HOME\"</span></p>\n<p>Defaults    secure_path <span class=\"o\">=</span> /sbin:/bin:/usr/sbin:/usr/bin</p>\n<p><span class=\"c\">## Next comes the main part: which users can run what software on </span>\n<span class=\"c\">## which machines (the sudoers file can be shared between multiple</span>\n<span class=\"c\">## systems).</span>\n<span class=\"c\">## Syntax:</span>\n<span class=\"c\">##</span>\n<span class=\"c\">##  user    MACHINE=COMMANDS</span>\n<span class=\"c\">##</span>\n<span class=\"c\">## The COMMANDS section may have other options added to it.</span>\n<span class=\"c\">##</span>\n<span class=\"c\">## Allow root to run any commands anywhere </span>\nroot    <span class=\"nv\">ALL</span><span class=\"o\">=(</span>ALL<span class=\"o\">)</span>   ALL</p>\n<p><span class=\"c\">## Allows members of the 'sys' group to run networking, software, </span>\n<span class=\"c\">## service management apps and more.</span>\n<span class=\"c\"># %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS</span></p>\n<p><span class=\"c\">## Allows people in group wheel to run all commands</span>\n<span class=\"c\"># %wheel    ALL=(ALL)   ALL</span></p>\n<p><span class=\"c\">## Same thing without a password</span>\n<span class=\"c\"># %wheel    ALL=(ALL)   NOPASSWD: ALL</span></p>\n<p><span class=\"c\">## Allows members of the users group to mount and unmount the </span>\n<span class=\"c\">## cdrom as root</span>\n<span class=\"c\"># %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom</span></p>\n<p><span class=\"c\">## Allows members of the users group to shutdown this system</span>\n<span class=\"c\"># %users  localhost=/sbin/shutdown -h now</span></p>\n<p><span class=\"c\">## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)</span>\n<span class=\"c\">#includedir /etc/sudoers.d</span></p>\n</pre></div></div>\n<p>参考；<br>\n<a href=\"http://d.hatena.ne.jp/shibainu55/20090720/1248053978\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://d.hatena.ne.jp/shibainu55/20090720/1248053978</a></p>","frontmatter":{"date":"2014-06-11","slug":"/blog/a052603c43fdc434d423","title":"chef-soloをec2に向けてcookしたらsudoのスクリプトが動かせなかった","image":null,"tags":["Linux","EC2","chef","chef-solo"]}}},"pageContext":{"slug":"/blog/a052603c43fdc434d423"}},"staticQueryHashes":["1342192543"]}