{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/blog/e1cd60797bb083597947/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"http://qiita.com/yu1ch1/items/9e5880f3dcb825950781\" id=\"reference-2473cbdef2358e38dd39\">前回</a>のつづきです。</p>\n<p><a href=\"https://github.com/locomotivecms/wagon\" rel=\"nofollow noopener\" target=\"_blank\">wagon</a>を使うとテンプレート（html,css,js,imageとかasset)をさくっと作れます。</p>\n<p>siteを作ったらこういうdirができます。</p>\n<div class=\"code-frame\" data-lang=\"bash\">\n<div class=\"code-lang\"><span class=\"bold\">tree</span></div>\n<div class=\"highlight\"><pre><span class=\"nb\">.</span>\n├── Gemfile\n├── Gemfile.lock\n├── app\n│   ├── content_types\n│   └── views\n│       ├── pages\n│       │   ├── index.liquid\n│       └── snippets\n│           └── footer.liquid\n├── config\n│   ├── deploy.yml\n│   ├── site.yml\n│   └── translations.yml\n├── config.ru\n├── data\n├── log\n│   └── wagon.log\n└── public\n    ├── fonts\n    │   ├── ...\n    ├── images\n    │   ├── hoge_banner_A.jpg\n    ├── javascripts\n    │   ├── bootstrap.js\n    │   ├── bootstrap.min.js\n    │   ├── jquery-1.6.3.min.js\n    ├── samples\n    │   └── favicon.png\n    └── stylesheets\n        ├── bootstrap-theme.css\n        ├── bootstrap.css\n        ├── bootstrap.min.css\n</pre></div>\n</div>\n<p>/app/view以下に置いたファイルがpageとしてlocomotiveアプリにデプロイできます。</p>\n<p>とっつきにくいのはなんといっても</p>\n<p>〜〜.liquid</p>\n<p>です。</p>\n<p>shopifyのストア編集機能で使われているhamlっぽい記法です。</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>{{ page.title }}\n</pre></div></div>\n<p>や</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>{{ 'bootstrap.min.css' | stylesheet_tag }}\n</pre></div></div>\n<p>など。</p>\n<p>詳しい記法は<a href=\"http://doc.locomotivecms.com/references/liquid-language\" rel=\"nofollow noopener\" target=\"_blank\">ドキュメント</a>をみてください。</p>\n<p>きっと後で書く場面があります。</p>\n<p>wagon serveでサーバを動かしブラウザで見た目を確認しながら、/app/view以下でhtmlを、/public配下でassetsを編集するでしょう。</p>\n<p>そしてpageができたら自分のlocomotiveCMSにデプロイします。</p>\n<p>準備は簡単。</p>\n<p>/config/deplay.ymlをいじるだけ。</p>\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">hoge</span></div>\n<div class=\"highlight\"><pre><span class=\"na\">development</span><span class=\"pi\">:</span>\n  <span class=\"na\">host</span><span class=\"pi\">:</span> <span class=\"s\">localhost:8080</span>\n  <span class=\"na\">email</span><span class=\"pi\">:</span> <span class=\"s\">hoge@hoge.hoge</span>\n  <span class=\"na\">password</span><span class=\"pi\">:</span> <span class=\"s\">nakamayakinnikunn</span>\n<span class=\"na\">staging</span><span class=\"pi\">:</span>\n  <span class=\"na\">host</span><span class=\"pi\">:</span> <span class=\"s\">www.example.com</span>\n  <span class=\"na\">email</span><span class=\"pi\">:</span> <span class=\"s\">john@doe.net</span>\n  <span class=\"na\">password</span><span class=\"pi\">:</span> <span class=\"s\">apassword</span>\n  <span class=\"c1\"># api_key: &lt;your api key here&gt;</span>\n<span class=\"na\">production</span><span class=\"pi\">:</span>\n  <span class=\"na\">host</span><span class=\"pi\">:</span> <span class=\"s\">www.example.com</span>\n  <span class=\"na\">email</span><span class=\"pi\">:</span> <span class=\"s\">john@doe.net</span>\n  <span class=\"na\">password</span><span class=\"pi\">:</span> <span class=\"s\">apassword</span>\n  <span class=\"c1\"># api_key: &lt;your api key here&gt;</span>\n</pre></div>\n</div>\n<p>自分で作ったlocomotiveアプリが動いているhost名、email、passwordを設定します。<br>\nいざデプロイ！</p>\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$ bundle exec wagon push staging\n</pre></div></div>\n<p>管理画面でローカルでつくったページが表示されることを確認してください。<br>\nこれでひとまずcmsつくって簡単にpage編集できるようになりましたね。<br>\nあと対応すべきなのはi18nぐらいですかね。メモが溜まればポストします。</p>\n<p>rubyistが最小限の努力で知り合いから感謝され、焼き肉でも奢ってもらえれば幸いです。</p>\n<h3>\n<span id=\"この後のオススメ\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%81%AE%E5%BE%8C%E3%81%AE%E3%82%AA%E3%82%B9%E3%82%B9%E3%83%A1\"><i class=\"fa fa-link\"></i></a>この後のオススメ</h3>\n<hr>\n<p><a href=\"http://qiita.com/hal_sk/items/b72db4a288566e92096c\" id=\"reference-326d8b7e5053eef91397\">LocomotiveCMS でニュース記事一覧機能を作る</a></p>\n<h3>\n<span id=\"ハマりどころ\" class=\"fragment\"></span><a href=\"#%E3%83%8F%E3%83%9E%E3%82%8A%E3%81%A9%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>ハマりどころ</h3>\n<hr>\n<ul>\n<li>liquid</li>\n</ul>\n<p>デプロイ時はwagonが自動的にassetsをアップロードしてくれるのですが、/public/site/にhash値のdirを作成します。<br>\n この辺りのpath指定は先ほど紹介したliquidを使って書かないと自動で変換してくれません。<br>\nですので、assetsの指定の部分は最低liquidで書く必要があります。</p>\n<ul>\n<li>画像アップロード</li>\n</ul>\n<p>管理画面から画像をアップロードするリンクが見つけにくいです。ページ編集の一番下にあります。</p>\n<p><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F17326%2Fad02b664-c68b-6510-5f71-2ff518c40b0f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d7edf5c4ccfdaab168e62f1c275f3c43\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F17326%2Fad02b664-c68b-6510-5f71-2ff518c40b0f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d7edf5c4ccfdaab168e62f1c275f3c43\" alt=\"Screen Shot 2014-04-08 at 4.35.47.png\" title=\"Screen Shot 2014-04-08 at 4.35.47.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/17326/ad02b664-c68b-6510-5f71-2ff518c40b0f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F17326%2Fad02b664-c68b-6510-5f71-2ff518c40b0f.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=35acbda80991c5725c7fc8fe299ccff0 1x\" loading=\"lazy\"></a></p>","frontmatter":{"date":"2014-04-07","slug":"/blog/e1cd60797bb083597947","title":"Railsで知り合いのサイトを作る時のベストプラクティス（CMSテンプレートデプロイ編）","image":null,"tags":["Rails","CMS","locomotivecms","wagon"]}}},"pageContext":{"slug":"/blog/e1cd60797bb083597947"}},"staticQueryHashes":["1342192543"]}